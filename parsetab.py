
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA EQUALS INCORRECT LPAREN NAME NUMBER RPAREN SEMICOLON SNAMEstatement : SNAME EQUALS NAME LPAREN endparameter RPAREN SEMICOLON\n                 | SNAME EQUALS NAME LPAREN RPAREN SEMICOLONsimpleparameter : NAME COMMA\n                       | NUMBER COMMAparameter : simpleparameter\n                 | parameter simpleparameterendparameter : parameter NUMBER\n                    | parameter NAME\n                    | NAME\n                    | NUMBER'
    
_lr_action_items = {'SNAME':([0,],[2,]),'$end':([1,14,19,],[0,-2,-1,]),'EQUALS':([2,],[3,]),'NAME':([3,5,9,11,12,17,18,],[4,6,16,-5,-3,-6,-4,]),'LPAREN':([4,],[5,]),'RPAREN':([5,6,7,10,15,16,],[8,-9,13,-10,-7,-8,]),'NUMBER':([5,9,11,12,17,18,],[10,15,-5,-3,-6,-4,]),'COMMA':([6,10,15,16,],[12,18,18,12,]),'SEMICOLON':([8,13,],[14,19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'endparameter':([5,],[7,]),'parameter':([5,],[9,]),'simpleparameter':([5,9,],[11,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> SNAME EQUALS NAME LPAREN endparameter RPAREN SEMICOLON','statement',7,'p_statement_assign','flex.py',51),
  ('statement -> SNAME EQUALS NAME LPAREN RPAREN SEMICOLON','statement',6,'p_statement_assign','flex.py',52),
  ('simpleparameter -> NAME COMMA','simpleparameter',2,'p_statement_sparameter','flex.py',61),
  ('simpleparameter -> NUMBER COMMA','simpleparameter',2,'p_statement_sparameter','flex.py',62),
  ('parameter -> simpleparameter','parameter',1,'p_statement_parameter','flex.py',66),
  ('parameter -> parameter simpleparameter','parameter',2,'p_statement_parameter','flex.py',67),
  ('endparameter -> parameter NUMBER','endparameter',2,'p_statement_eparameter','flex.py',71),
  ('endparameter -> parameter NAME','endparameter',2,'p_statement_eparameter','flex.py',72),
  ('endparameter -> NAME','endparameter',1,'p_statement_eparameter','flex.py',73),
  ('endparameter -> NUMBER','endparameter',1,'p_statement_eparameter','flex.py',74),
]
